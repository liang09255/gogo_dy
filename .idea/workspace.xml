<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="65f5fc1e-49b0-4477-a376-9bb2445c3e29" name="更改" comment="">
      <change afterPath="$PROJECT_DIR$/video/internal/domain/hot.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.env" beforeDir="false" afterPath="$PROJECT_DIR$/.env" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/gogo_dy.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/gogo_dy.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/thriftCompiler.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/ggConfig/config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/common/ggConfig/config.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/ggKafka/kafka_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/ggLogKafka/kafka_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/ggKafka/log.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/ggLogKafka/log.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/ggKafka/receiver.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/ggLogKafka/receiver.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/common/ggKafka/sender.go" beforeDir="false" afterPath="$PROJECT_DIR$/common/ggLogKafka/sender.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.work.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.work.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user/internal/dal/followStats.go" beforeDir="false" afterPath="$PROJECT_DIR$/user/internal/dal/followStats.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/user/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user/pkg/utils/kafka.go" beforeDir="false" afterPath="$PROJECT_DIR$/user/pkg/utils/kafka.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/video/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/video/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/internal/dal/favorite.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/internal/dal/favorite.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/internal/dal/video.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/internal/dal/video.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/internal/dal/video_detail.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/internal/dal/video_detail.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/internal/domain/favorite.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/internal/domain/favorite.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/internal/domain/video.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/internal/domain/video.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/internal/mq/favoriteConsumer.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/internal/mq/favoriteConsumer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/internal/repo/video_detail.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/internal/repo/video_detail.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/pkg/service/videoService.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/pkg/service/videoService.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/video/router/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/video/router/router.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/go1.20.3" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2UyojQJ2jM1VnEvsS2Yqp6Q9BIJ" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "C:/Users/60925",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "MTConfigurable"
  }
}]]></component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>