version: '3'
services:
  mysql:
    container_name: mysql8
    image: mysql:${MYSQL_VERSION}
    restart: always
    ports:
      - 3306:3306
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: 
      MYSQL_DATABASE: 
    #    volumes:
    #      - ${MYSQL_DIR}/data:/var/lib/mysql
    #      - ${MYSQL_DIR}/conf:/etc/mysql/conf.d/
    #      - ${MYSQL_DIR}/logs:/logs
    command:
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
  redis:
    container_name: redis5
    image: redis:${REDIS_VERSION}
    restart: always
    volumes:
      - ${REDIS_DIR}/data:/data
      - ${REDIS_DIR}/conf/redis.conf:/etc/redis/redis.conf
    #    ports:
    #      - ${REDIS_PORT}:6379
    command: redis-server /etc/redis/redis.conf
  etcd:
    container_name: etcd3
    image: bitnami/etcd:${ETCD_VERSION}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    privileged: true
  #    volumes:
  #      - ${ETCD_DIR}/data:/bitnami/etcd/data
  #    ports:
  #      - ${ETCD_PORT}:2379
  #      - 2380:2380
  gogo_user:
    container_name: gogo_user
    image: gogo_user:${GOGO_VERSION}
    restart: always
    #    network_mode: 'host'
    depends_on:
      - mysql
      - redis
      - etcd
  gogo_chat:
    container_name: gogo_chat
    image: gogo_chat:${GOGO_VERSION}
    restart: always
    #    network_mode: 'host'
    depends_on:
      - mysql
      - redis
      - etcd
  gogo_video:
    container_name: gogo_video
    image: gogo_video:${GOGO_VERSION}
    restart: always
    #    network_mode: 'host'
    depends_on:
      - mysql
      - redis
      - etcd
  gogo_api:
    container_name: gogo_api
    image: gogo_api:${GOGO_VERSION}
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - gogo_user
      - gogo_chat
      - gogo_video
  kafdrop:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
  kafka:
    container_name: kafka
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
